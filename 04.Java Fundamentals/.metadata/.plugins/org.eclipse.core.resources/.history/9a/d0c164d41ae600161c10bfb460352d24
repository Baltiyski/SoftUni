package ìatrices;

import java.util.Scanner;

public class MaximalSum {
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		String[] rectRowCol = scanner.nextLine().split(" ");
		
		int rows = Integer.parseInt(rectRowCol[0]);
		int cols = Integer.parseInt(rectRowCol[1]);
		int[][] array = new int[rows][cols];
		
		fillArray(array, scanner);
		
		int maxSum = Integer.MIN_VALUE;
        int biggestMatrixRow = 0;
        int biggestMatrixCol = 0;

        for (int row = 0; row < array.length - 2; row++) {
            for (int col = 0; col < array[row].length - 2; col++) {
                int currentSum = getCurrentMaxSum(array, row, col);

                if (currentSum > maxSum){
                    maxSum = currentSum;
                    biggestMatrixRow = row;
                    biggestMatrixCol = col;
                }
            }
        }
		
		
	}
	
	 private static void printOutput(int maxSum, int biggestMatrixRow, int biggestMatrixCol, int[][] matrix) {
	        System.out.printf("Sum = %d%n", maxSum);

	        for (int row = biggestMatrixRow; row < biggestMatrixRow + 3; row++) {
	            for (int col = biggestMatrixCol; col < biggestMatrixCol + 3 ; col++) {
	                System.out.print(matrix[row][col] + " ");
	            }

	            System.out.println();
	        }
	    }
	
	public static int getCurrentMaxSum(int[][] matrix, int row, int col) {
		int currSum = 0;
		
		for (int i = row; i < row + 3 ; i++) {
            for (int j = col; j < col + 3 ; j++) {
            	currSum += matrix[i][j];
            }
        }
		
		return currSum;
	}
	
	public static void fillArray(int[][] matrix, Scanner scanner) {
		for (int row = 0; row < matrix.length; row++) {
			String[] input = scanner.nextLine().split(" ");
			for (int col = 0; col < input[row].length(); col++) {
				matrix[row][col] = Integer.getInteger(input[col]);
			}
		}
	}
}
